Enable NAND prefetching and apply SW ECC sub-page read patch

Patch is from 
 <http://arago-project.org/git/people/?p=sriram/ti-psp-omap.git;a=blobdiff;f=drivers/mtd/nand/omap2.c;h=b77f6445f0b788ac194358fffe613f7867c145c6;hp=e6f14cb69bcab68be9e5814eaa4438f73343411d;hb=1f62a9d1143cffcdc5dbf5b433fb905fa5f78831;hpb=de7109fd12c7b9d4080256bdfcd8893364a8decc>

diff --git a/arch/arm/mach-omap2/board-flash.c b/arch/arm/mach-omap2/board-flash.c
index dc1c0d0..31021d9 100644
--- a/arch/arm/mach-omap2/board-flash.c
+++ b/arch/arm/mach-omap2/board-flash.c
@@ -181,7 +181,7 @@ __init board_nand_init(struct mtd_partition *nand_parts,
 
 	if (cpu_is_ti81xx()) {
 		board_nand_data.ecc_opt = OMAP_ECC_HAMMING_CODE_HW;
-		board_nand_data.xfer_type = NAND_OMAP_POLLED;
+		board_nand_data.xfer_type = NAND_OMAP_PREFETCH_POLLED;
 
 		/*
 		 * For TI814x, the clock rate is different (110MHz).
diff --git a/drivers/mtd/nand/omap2.c b/drivers/mtd/nand/omap2.c
index 454f90c..efda6a4 100644
--- a/drivers/mtd/nand/omap2.c
+++ b/drivers/mtd/nand/omap2.c
@@ -266,11 +266,10 @@ static void omap_read_buf_pref(struct mtd_info *mtd, u_char *buf, int len)
 	if (ret) {
 		/* PFPW engine is busy, use cpu copy method */
 		if (info->nand.options & NAND_BUSWIDTH_16)
-			omap_read_buf16(mtd, buf, len);
+			omap_read_buf16(mtd, (u_char *)p, len);
 		else
-			omap_read_buf8(mtd, buf, len);
+			omap_read_buf8(mtd, (u_char *)p, len);
 	} else {
-		p = (u32 *) buf;
 		do {
 			r_count = gpmc_read_status(GPMC_PREFETCH_FIFO_CNT);
 			r_count = r_count >> 2;
@@ -296,7 +295,7 @@ static void omap_write_buf_pref(struct mtd_info *mtd,
 						struct omap_nand_info, mtd);
 	uint32_t w_count = 0;
 	int i = 0, ret = 0;
-	u16 *p;
+	u16 *p = (u16 *) buf;
 	unsigned long tim, limit;
 
 	/* take care of subpage writes */
@@ -312,11 +311,10 @@ static void omap_write_buf_pref(struct mtd_info *mtd,
 	if (ret) {
 		/* PFPW engine is busy, use cpu copy method */
 		if (info->nand.options & NAND_BUSWIDTH_16)
-			omap_write_buf16(mtd, buf, len);
+			omap_write_buf16(mtd, (u_char *) p, len);
 		else
-			omap_write_buf8(mtd, buf, len);
+			omap_write_buf8(mtd, (u_char *) p, len);
 	} else {
-		p = (u16 *) buf;
 		while (len) {
 			w_count = gpmc_read_status(GPMC_PREFETCH_FIFO_CNT);
 			w_count = w_count >> 1;
